apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: alb-ingress-controller
  name: alb-ingress-controller
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: alb-ingress-controller
  template:
    metadata:
      labels:
        app: alb-ingress-controller
    spec:
      serviceAccountName: alb-ingress-controller
      containers:
      - name: alb-ingress-controller
        image: amazon/aws-alb-ingress-controller:v2.4.2
        args:
          - --cluster-name={{ .Values.aws.clusterName }}
          - --aws-region={{ .Values.aws.region }}
          - --ingress-class=alb

---


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chat-app-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    cert-manager.io/cluster-issuer: letsencrypt-prod
    alb.ingress.kubernetes.io/actions.ssl-redirect: >
      {"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "StatusCode": "HTTP_301"}}
spec:
  rules:
    - host: {{ .Values.backend.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: chat-app-backend-service
                port:
                  number: 80
    - host: {{ .Values.frontend.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: chat-app-frontend-service
                port:
                  number: 80
  tls:
    - hosts:
        - {{ .Values.backend.host }}
        - {{ .Values.frontend.host }}
      secretName: tls-secret  # Secret for Let's Encrypt
