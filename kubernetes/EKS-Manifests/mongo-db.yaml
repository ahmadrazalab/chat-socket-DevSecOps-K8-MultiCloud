# telnet mongodb-chat-prod-0.mongodb-headless-svc.production.svc.cluster.local 

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-chat-prod
  namespace: chatappns
spec:
  serviceName: "mongodb-headless-svc"
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-chat-prod
  template:
    metadata:
      labels:
        app: mongodb-chat-prod
    spec:
      containers:
        - name: mongodb
          image: mongo:6.0
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-chat-prod-secret
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-chat-prod-secret
                  key: MONGO_INITDB_ROOT_PASSWORD
          volumeMounts:
            - name: mongodb-storage
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongodb-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
        storageClassName: ebs-sc

---

# MongoDB Headless Service for StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: mongodb-headless-svc
  namespace: chatappns
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    app: mongodb-chat-prod
---

# StorageClass for AWS EBS
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-sc
provisioner: ebs.csi.aws.com
volumeBindingMode: WaitForFirstConsumer
